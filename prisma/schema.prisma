// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Migrated
model LogGroup {
  @@map("log_groups")
  id                Int @id @default(autoincrement())
  name              String @unique
  logs              Log[]
  errorExceptions   ErrorException[]
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
}

// Migrated
model Log {
  @@map("logs")
  id          Int @id @default(autoincrement())
  level       LogLevel @default(INFO)
  flow        String
  content     String @db.Text
  logGroup    LogGroup? @relation(fields: [logGroupId], references: [id])
  logGroupId  Int? @map("log_group_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
}

// Migrated
enum LogLevel {
  TRACE
  DEBUG
  INFO
  WARN
  ERROR
  FATAL
}

// Migrated
model ErrorException {
  @@map("error_exceptions")
  id                  Int @id @default(autoincrement())
  package             String
  flow                String
  name                String
  message             String
  stackStr            String @db.Text @map("stack_str")
  stack               Stack[]
  systemDetails       SystemDetails?
  executionDetails    ExecutionDetails?
  environmentDetails  EnvironmentDetails[]
  extraDetails        ExtraDetails[]
  logGroup            LogGroup? @relation(fields: [logGroupId], references: [id])
  logGroupId          Int? @map("log_group_id")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")
}

// Migrated
model Stack {
  @@map("stack")
  id                Int @id @default(autoincrement())
  file              String
  function          String
  line              Int
  column            Int
  code              CodeLine[]
  errorException    ErrorException @relation(fields: [errorExceptionId], references: [id])
  errorExceptionId  Int @map("error_exception_id")
}

// Migrated
model CodeLine {
  @@map("stack_code_lines")
  id          Int @id @default(autoincrement())
  line        Int
  content     String
  isErrorLine Boolean @map("is_error_line")
  stack       Stack @relation(fields: [stackId], references: [id])
  stackId     Int @map("stack_id")
}

model SystemDetails {
  @@map("system_details")
  id                Int @id @default(autoincrement())
  arch              String
  processor         String
  hostname          String?
  platform          String
  platformRelease   String? @map("platform_release")
  platformVersion   String? @map("platform_version")
  user              String?
  errorException    ErrorException @relation(fields: [errorExceptionId], references: [id])
  errorExceptionId  Int @unique @map("error_exception_id")
}
model ExecutionDetails {
  @@map("execution_details")
  id                  Int @id @default(autoincrement())
  language            String
  version             String
  executionFinishTime DateTime @map("execution_finish_time")
  arguments           ExecutionArgument[]
  errorException      ErrorException @relation(fields: [errorExceptionId], references: [id])
  errorExceptionId    Int @unique @map("error_exception_id")
}

model ExecutionArgument {
  @@map("execution_arguments")
  id                  Int @id @default(autoincrement())
  argument            String
  executionDetails    ExecutionDetails @relation(fields: [executionDetailsId], references: [id])
  executionDetailsId  Int @map("execution_details_id")
}

model EnvironmentDetails {
  @@map("environment_details")
  id                Int @id @default(autoincrement())
  name              String
  value             String @db.Text
  errorException    ErrorException @relation(fields: [errorExceptionId], references: [id])
  errorExceptionId  Int @map("error_exception_id")
}

model ExtraDetails {
  @@map("extra_details")
  id                Int @id @default(autoincrement())
  name              String
  value             String @db.Text
  isJson            Boolean @map("is_json")
  errorException    ErrorException @relation(fields: [errorExceptionId], references: [id])
  errorExceptionId  Int @map("error_exception_id")
}
